Nonterminals useless in grammar

    debug_expr


Terminals unused in grammar

    TCOLON
    TTO
    TSQUOTE
    IS
    DEBUGSTART
    DEBUGEND


Rules useless in grammar

   73 debug_expr: DEBUGSTART stmt DEBUGEND
   74           | DEBUGSTART DEBUGEND


State 24 conflicts: 3 shift/reduce
State 33 conflicts: 1 shift/reduce
State 36 conflicts: 2 shift/reduce
State 40 conflicts: 7 shift/reduce
State 78 conflicts: 12 shift/reduce
State 84 conflicts: 7 shift/reduce
State 85 conflicts: 7 shift/reduce
State 86 conflicts: 7 shift/reduce
State 87 conflicts: 7 shift/reduce
State 88 conflicts: 7 shift/reduce
State 89 conflicts: 12 shift/reduce
State 90 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | stmts

    3 stmts: stmt
    4      | stmts stmt

    5 stmt: var_decl
    6     | var_decl_deduce
    7     | func_decl
    8     | class_decl
    9     | conditional_if
   10     | return
   11     | while
   12     | array_add_element
   13     | expr

   14 block: TBLOCKSTART stmts TBLOCKEND
   15      | TBLOCKSTART TBLOCKEND

   16 conditional_if: TIF TLPAREN expr TRPAREN block TELSE block
   17               | TIF TLPAREN expr TRPAREN block

   18 while: TWHILE TLPAREN expr TRPAREN block TELSE block
   19      | TWHILE TLPAREN expr TRPAREN block

   20 var_decl: ident ident
   21         | ident ident TEQUAL expr

   22 var_decl_deduce: TVAR ident TEQUAL expr

   23 func_decl: TDEF ident TLPAREN func_decl_args TRPAREN TRETURN ident block
   24          | TDEF ident TLPAREN func_decl_args TRPAREN block

   25 func_decl_args: %empty
   26               | var_decl
   27               | func_decl_args TCOMMA var_decl

   28 class_decl: TDEF ident block

   29 ident: TIDENTIFIER
   30      | TIDENTIFIER TDOT TIDENTIFIER

   31 literals: TINTEGER
   32         | TDOUBLE
   33         | TSTR
   34         | TBOOL

   35 return: TRETURN expr
   36       | TRETURN_SIMPLE

   37 expr: ident TEQUAL expr
   38     | ident TLPAREN call_args TRPAREN
   39     | ident
   40     | literals
   41     | boolean_expr
   42     | binop_expr
   43     | unaryop_expr
   44     | TLPAREN expr TRPAREN
   45     | range_expr
   46     | array_expr
   47     | array_access

   48 binop_expr: expr TAND expr
   49           | expr TOR expr
   50           | expr TPLUS expr
   51           | expr TMINUS expr
   52           | expr TMUL expr
   53           | expr TDIV expr

   54 unaryop_expr: TNOT expr

   55 boolean_expr: expr comparison expr

   56 call_args: %empty
   57          | expr
   58          | call_args TCOMMA expr

   59 comparison: TCEQ
   60           | TCNE
   61           | TCLO
   62           | TCLE
   63           | TCGR
   64           | TCGE

   65 array_elemets_expr: %empty
   66                   | expr
   67                   | array_elemets_expr TCOMMA expr

   68 array_expr: TLBRACKET array_elemets_expr TRBRACKET

   69 array_add_element: ident TLTLT expr

   70 array_access: ident TLBRACKET TINTEGER TRBRACKET
   71             | array_access TLBRACKET TINTEGER TRBRACKET

   72 range_expr: TLBRACKET expr TRANGE expr TRBRACKET


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TIDENTIFIER <string> (258) 29 30
    TINTEGER <string> (259) 31 70 71
    TDOUBLE <string> (260) 32
    TSTR <string> (261) 33
    TBOOL <string> (262) 34
    TCEQ <token> (263) 59
    TCNE <token> (264) 60
    TCLO <token> (265) 61
    TCLE <token> (266) 62
    TCGR <token> (267) 63
    TCGE <token> (268) 64
    TEQUAL <token> (269) 21 22 37
    TLTLT <token> (270) 69
    TCOMMA <token> (271) 27 58 67
    TDOT <token> (272) 30
    TCOLON <token> (273)
    TRANGE <token> (274) 72
    TLPAREN <token> (275) 16 17 18 19 23 24 38 44
    TRPAREN <token> (276) 16 17 18 19 23 24 38 44
    TLBRACKET <token> (277) 68 70 71 72
    TRBRACKET <token> (278) 68 70 71 72
    TPLUS <token> (279) 50
    TMINUS <token> (280) 51
    TMUL <token> (281) 52
    TDIV <token> (282) 53
    TNOT <token> (283) 54
    TAND <token> (284) 48
    TOR <token> (285) 49
    TIF <token> (286) 16 17
    TELSE <token> (287) 16 18
    TWHILE <token> (288) 18 19
    TTO <token> (289)
    TSQUOTE <token> (290)
    TDEF <token> (291) 23 24 28
    TRETURN <token> (292) 23 35
    TRETURN_SIMPLE <token> (293) 36
    TVAR <token> (294) 22
    IS <token> (295)
    TBLOCKSTART <token> (296) 14 15
    TBLOCKEND <token> (297) 14 15
    DEBUGSTART <token> (298)
    DEBUGEND <token> (299)


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    program <block> (46)
        on left: 1 2
        on right: 0
    stmts <block> (47)
        on left: 3 4
        on right: 2 4 14
    stmt <stmt> (48)
        on left: 5 6 7 8 9 10 11 12 13
        on right: 3 4
    block <block> (49)
        on left: 14 15
        on right: 16 17 18 19 23 24 28
    conditional_if <stmt> (50)
        on left: 16 17
        on right: 9
    while <stmt> (51)
        on left: 18 19
        on right: 11
    var_decl <stmt> (52)
        on left: 20 21
        on right: 5 26 27
    var_decl_deduce <stmt> (53)
        on left: 22
        on right: 6
    func_decl <stmt> (54)
        on left: 23 24
        on right: 7
    func_decl_args <varvec> (55)
        on left: 25 26 27
        on right: 23 24 27
    class_decl <stmt> (56)
        on left: 28
        on right: 8
    ident <ident> (57)
        on left: 29 30
        on right: 20 21 22 23 24 28 37 38 39 69 70
    literals <expr> (58)
        on left: 31 32 33 34
        on right: 40
    return <stmt> (59)
        on left: 35 36
        on right: 10
    expr <expr> (60)
        on left: 37 38 39 40 41 42 43 44 45 46 47
        on right: 13 16 17 18 19 21 22 35 37 44 48 49 50 51 52 53 54 55 57 58 66 67 69 72
    binop_expr <expr> (61)
        on left: 48 49 50 51 52 53
        on right: 42
    unaryop_expr <expr> (62)
        on left: 54
        on right: 43
    boolean_expr <expr> (63)
        on left: 55
        on right: 41
    call_args <exprvec> (64)
        on left: 56 57 58
        on right: 38 58
    comparison <token> (65)
        on left: 59 60 61 62 63 64
        on right: 55
    array_elemets_expr <exprvec> (66)
        on left: 65 66 67
        on right: 67 68
    array_expr <expr> (67)
        on left: 68
        on right: 46
    array_add_element <stmt> (68)
        on left: 69
        on right: 12
    array_access <expr> (69)
        on left: 70 71
        on right: 47 71
    range_expr <expr> (70)
        on left: 72
        on right: 45


State 0

    0 $accept: . program $end

    TIDENTIFIER     shift, and go to state 1
    TINTEGER        shift, and go to state 2
    TDOUBLE         shift, and go to state 3
    TSTR            shift, and go to state 4
    TBOOL           shift, and go to state 5
    TLPAREN         shift, and go to state 6
    TLBRACKET       shift, and go to state 7
    TNOT            shift, and go to state 8
    TIF             shift, and go to state 9
    TWHILE          shift, and go to state 10
    TDEF            shift, and go to state 11
    TRETURN         shift, and go to state 12
    TRETURN_SIMPLE  shift, and go to state 13
    TVAR            shift, and go to state 14

    $default  reduce using rule 1 (program)

    program            go to state 15
    stmts              go to state 16
    stmt               go to state 17
    conditional_if     go to state 18
    while              go to state 19
    var_decl           go to state 20
    var_decl_deduce    go to state 21
    func_decl          go to state 22
    class_decl         go to state 23
    ident              go to state 24
    literals           go to state 25
    return             go to state 26
    expr               go to state 27
    binop_expr         go to state 28
    unaryop_expr       go to state 29
    boolean_expr       go to state 30
    array_expr         go to state 31
    array_add_element  go to state 32
    array_access       go to state 33
    range_expr         go to state 34


State 1

   29 ident: TIDENTIFIER .
   30      | TIDENTIFIER . TDOT TIDENTIFIER

    TDOT  shift, and go to state 35

    $default  reduce using rule 29 (ident)


State 2

   31 literals: TINTEGER .

    $default  reduce using rule 31 (literals)


State 3

   32 literals: TDOUBLE .

    $default  reduce using rule 32 (literals)


State 4

   33 literals: TSTR .

    $default  reduce using rule 33 (literals)


State 5

   34 literals: TBOOL .

    $default  reduce using rule 34 (literals)


State 6

   44 expr: TLPAREN . expr TRPAREN

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    ident         go to state 36
    literals      go to state 25
    expr          go to state 37
    binop_expr    go to state 28
    unaryop_expr  go to state 29
    boolean_expr  go to state 30
    array_expr    go to state 31
    array_access  go to state 33
    range_expr    go to state 34


State 7

   68 array_expr: TLBRACKET . array_elemets_expr TRBRACKET
   72 range_expr: TLBRACKET . expr TRANGE expr TRBRACKET

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    $default  reduce using rule 65 (array_elemets_expr)

    ident               go to state 36
    literals            go to state 25
    expr                go to state 38
    binop_expr          go to state 28
    unaryop_expr        go to state 29
    boolean_expr        go to state 30
    array_elemets_expr  go to state 39
    array_expr          go to state 31
    array_access        go to state 33
    range_expr          go to state 34


State 8

   54 unaryop_expr: TNOT . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    ident         go to state 36
    literals      go to state 25
    expr          go to state 40
    binop_expr    go to state 28
    unaryop_expr  go to state 29
    boolean_expr  go to state 30
    array_expr    go to state 31
    array_access  go to state 33
    range_expr    go to state 34


State 9

   16 conditional_if: TIF . TLPAREN expr TRPAREN block TELSE block
   17               | TIF . TLPAREN expr TRPAREN block

    TLPAREN  shift, and go to state 41


State 10

   18 while: TWHILE . TLPAREN expr TRPAREN block TELSE block
   19      | TWHILE . TLPAREN expr TRPAREN block

    TLPAREN  shift, and go to state 42


State 11

   23 func_decl: TDEF . ident TLPAREN func_decl_args TRPAREN TRETURN ident block
   24          | TDEF . ident TLPAREN func_decl_args TRPAREN block
   28 class_decl: TDEF . ident block

    TIDENTIFIER  shift, and go to state 1

    ident  go to state 43


State 12

   35 return: TRETURN . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    ident         go to state 36
    literals      go to state 25
    expr          go to state 44
    binop_expr    go to state 28
    unaryop_expr  go to state 29
    boolean_expr  go to state 30
    array_expr    go to state 31
    array_access  go to state 33
    range_expr    go to state 34


State 13

   36 return: TRETURN_SIMPLE .

    $default  reduce using rule 36 (return)


State 14

   22 var_decl_deduce: TVAR . ident TEQUAL expr

    TIDENTIFIER  shift, and go to state 1

    ident  go to state 45


State 15

    0 $accept: program . $end

    $end  shift, and go to state 46


State 16

    2 program: stmts .
    4 stmts: stmts . stmt

    TIDENTIFIER     shift, and go to state 1
    TINTEGER        shift, and go to state 2
    TDOUBLE         shift, and go to state 3
    TSTR            shift, and go to state 4
    TBOOL           shift, and go to state 5
    TLPAREN         shift, and go to state 6
    TLBRACKET       shift, and go to state 7
    TNOT            shift, and go to state 8
    TIF             shift, and go to state 9
    TWHILE          shift, and go to state 10
    TDEF            shift, and go to state 11
    TRETURN         shift, and go to state 12
    TRETURN_SIMPLE  shift, and go to state 13
    TVAR            shift, and go to state 14

    $default  reduce using rule 2 (program)

    stmt               go to state 47
    conditional_if     go to state 18
    while              go to state 19
    var_decl           go to state 20
    var_decl_deduce    go to state 21
    func_decl          go to state 22
    class_decl         go to state 23
    ident              go to state 24
    literals           go to state 25
    return             go to state 26
    expr               go to state 27
    binop_expr         go to state 28
    unaryop_expr       go to state 29
    boolean_expr       go to state 30
    array_expr         go to state 31
    array_add_element  go to state 32
    array_access       go to state 33
    range_expr         go to state 34


State 17

    3 stmts: stmt .

    $default  reduce using rule 3 (stmts)


State 18

    9 stmt: conditional_if .

    $default  reduce using rule 9 (stmt)


State 19

   11 stmt: while .

    $default  reduce using rule 11 (stmt)


State 20

    5 stmt: var_decl .

    $default  reduce using rule 5 (stmt)


State 21

    6 stmt: var_decl_deduce .

    $default  reduce using rule 6 (stmt)


State 22

    7 stmt: func_decl .

    $default  reduce using rule 7 (stmt)


State 23

    8 stmt: class_decl .

    $default  reduce using rule 8 (stmt)


State 24

   20 var_decl: ident . ident
   21         | ident . ident TEQUAL expr
   37 expr: ident . TEQUAL expr
   38     | ident . TLPAREN call_args TRPAREN
   39     | ident .
   69 array_add_element: ident . TLTLT expr
   70 array_access: ident . TLBRACKET TINTEGER TRBRACKET

    TIDENTIFIER  shift, and go to state 1
    TEQUAL       shift, and go to state 48
    TLTLT        shift, and go to state 49
    TLPAREN      shift, and go to state 50
    TLBRACKET    shift, and go to state 51

    TIDENTIFIER  [reduce using rule 39 (expr)]
    TLPAREN      [reduce using rule 39 (expr)]
    TLBRACKET    [reduce using rule 39 (expr)]
    $default     reduce using rule 39 (expr)

    ident  go to state 52


State 25

   40 expr: literals .

    $default  reduce using rule 40 (expr)


State 26

   10 stmt: return .

    $default  reduce using rule 10 (stmt)


State 27

   13 stmt: expr .
   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   55 boolean_expr: expr . comparison expr

    TCEQ    shift, and go to state 53
    TCNE    shift, and go to state 54
    TCLO    shift, and go to state 55
    TCLE    shift, and go to state 56
    TCGR    shift, and go to state 57
    TCGE    shift, and go to state 58
    TPLUS   shift, and go to state 59
    TMINUS  shift, and go to state 60
    TMUL    shift, and go to state 61
    TDIV    shift, and go to state 62
    TAND    shift, and go to state 63
    TOR     shift, and go to state 64

    $default  reduce using rule 13 (stmt)

    comparison  go to state 65


State 28

   42 expr: binop_expr .

    $default  reduce using rule 42 (expr)


State 29

   43 expr: unaryop_expr .

    $default  reduce using rule 43 (expr)


State 30

   41 expr: boolean_expr .

    $default  reduce using rule 41 (expr)


State 31

   46 expr: array_expr .

    $default  reduce using rule 46 (expr)


State 32

   12 stmt: array_add_element .

    $default  reduce using rule 12 (stmt)


State 33

   47 expr: array_access .
   71 array_access: array_access . TLBRACKET TINTEGER TRBRACKET

    TLBRACKET  shift, and go to state 66

    TLBRACKET  [reduce using rule 47 (expr)]
    $default   reduce using rule 47 (expr)


State 34

   45 expr: range_expr .

    $default  reduce using rule 45 (expr)


State 35

   30 ident: TIDENTIFIER TDOT . TIDENTIFIER

    TIDENTIFIER  shift, and go to state 67


State 36

   37 expr: ident . TEQUAL expr
   38     | ident . TLPAREN call_args TRPAREN
   39     | ident .
   70 array_access: ident . TLBRACKET TINTEGER TRBRACKET

    TEQUAL     shift, and go to state 48
    TLPAREN    shift, and go to state 50
    TLBRACKET  shift, and go to state 51

    TLPAREN    [reduce using rule 39 (expr)]
    TLBRACKET  [reduce using rule 39 (expr)]
    $default   reduce using rule 39 (expr)


State 37

   44 expr: TLPAREN expr . TRPAREN
   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   55 boolean_expr: expr . comparison expr

    TCEQ     shift, and go to state 53
    TCNE     shift, and go to state 54
    TCLO     shift, and go to state 55
    TCLE     shift, and go to state 56
    TCGR     shift, and go to state 57
    TCGE     shift, and go to state 58
    TRPAREN  shift, and go to state 68
    TPLUS    shift, and go to state 59
    TMINUS   shift, and go to state 60
    TMUL     shift, and go to state 61
    TDIV     shift, and go to state 62
    TAND     shift, and go to state 63
    TOR      shift, and go to state 64

    comparison  go to state 65


State 38

   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   55 boolean_expr: expr . comparison expr
   66 array_elemets_expr: expr .
   72 range_expr: TLBRACKET expr . TRANGE expr TRBRACKET

    TCEQ    shift, and go to state 53
    TCNE    shift, and go to state 54
    TCLO    shift, and go to state 55
    TCLE    shift, and go to state 56
    TCGR    shift, and go to state 57
    TCGE    shift, and go to state 58
    TRANGE  shift, and go to state 69
    TPLUS   shift, and go to state 59
    TMINUS  shift, and go to state 60
    TMUL    shift, and go to state 61
    TDIV    shift, and go to state 62
    TAND    shift, and go to state 63
    TOR     shift, and go to state 64

    $default  reduce using rule 66 (array_elemets_expr)

    comparison  go to state 65


State 39

   67 array_elemets_expr: array_elemets_expr . TCOMMA expr
   68 array_expr: TLBRACKET array_elemets_expr . TRBRACKET

    TCOMMA     shift, and go to state 70
    TRBRACKET  shift, and go to state 71


State 40

   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   54 unaryop_expr: TNOT expr .
   55 boolean_expr: expr . comparison expr

    TCEQ  shift, and go to state 53
    TCNE  shift, and go to state 54
    TCLO  shift, and go to state 55
    TCLE  shift, and go to state 56
    TCGR  shift, and go to state 57
    TCGE  shift, and go to state 58
    TOR   shift, and go to state 64

    TCEQ      [reduce using rule 54 (unaryop_expr)]
    TCNE      [reduce using rule 54 (unaryop_expr)]
    TCLO      [reduce using rule 54 (unaryop_expr)]
    TCLE      [reduce using rule 54 (unaryop_expr)]
    TCGR      [reduce using rule 54 (unaryop_expr)]
    TCGE      [reduce using rule 54 (unaryop_expr)]
    TOR       [reduce using rule 54 (unaryop_expr)]
    $default  reduce using rule 54 (unaryop_expr)

    comparison  go to state 65


State 41

   16 conditional_if: TIF TLPAREN . expr TRPAREN block TELSE block
   17               | TIF TLPAREN . expr TRPAREN block

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    ident         go to state 36
    literals      go to state 25
    expr          go to state 72
    binop_expr    go to state 28
    unaryop_expr  go to state 29
    boolean_expr  go to state 30
    array_expr    go to state 31
    array_access  go to state 33
    range_expr    go to state 34


State 42

   18 while: TWHILE TLPAREN . expr TRPAREN block TELSE block
   19      | TWHILE TLPAREN . expr TRPAREN block

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    ident         go to state 36
    literals      go to state 25
    expr          go to state 73
    binop_expr    go to state 28
    unaryop_expr  go to state 29
    boolean_expr  go to state 30
    array_expr    go to state 31
    array_access  go to state 33
    range_expr    go to state 34


State 43

   23 func_decl: TDEF ident . TLPAREN func_decl_args TRPAREN TRETURN ident block
   24          | TDEF ident . TLPAREN func_decl_args TRPAREN block
   28 class_decl: TDEF ident . block

    TLPAREN      shift, and go to state 74
    TBLOCKSTART  shift, and go to state 75

    block  go to state 76


State 44

   35 return: TRETURN expr .
   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   55 boolean_expr: expr . comparison expr

    TCEQ    shift, and go to state 53
    TCNE    shift, and go to state 54
    TCLO    shift, and go to state 55
    TCLE    shift, and go to state 56
    TCGR    shift, and go to state 57
    TCGE    shift, and go to state 58
    TPLUS   shift, and go to state 59
    TMINUS  shift, and go to state 60
    TMUL    shift, and go to state 61
    TDIV    shift, and go to state 62
    TAND    shift, and go to state 63
    TOR     shift, and go to state 64

    $default  reduce using rule 35 (return)

    comparison  go to state 65


State 45

   22 var_decl_deduce: TVAR ident . TEQUAL expr

    TEQUAL  shift, and go to state 77


State 46

    0 $accept: program $end .

    $default  accept


State 47

    4 stmts: stmts stmt .

    $default  reduce using rule 4 (stmts)


State 48

   37 expr: ident TEQUAL . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    ident         go to state 36
    literals      go to state 25
    expr          go to state 78
    binop_expr    go to state 28
    unaryop_expr  go to state 29
    boolean_expr  go to state 30
    array_expr    go to state 31
    array_access  go to state 33
    range_expr    go to state 34


State 49

   69 array_add_element: ident TLTLT . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    ident         go to state 36
    literals      go to state 25
    expr          go to state 79
    binop_expr    go to state 28
    unaryop_expr  go to state 29
    boolean_expr  go to state 30
    array_expr    go to state 31
    array_access  go to state 33
    range_expr    go to state 34


State 50

   38 expr: ident TLPAREN . call_args TRPAREN

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    $default  reduce using rule 56 (call_args)

    ident         go to state 36
    literals      go to state 25
    expr          go to state 80
    binop_expr    go to state 28
    unaryop_expr  go to state 29
    boolean_expr  go to state 30
    call_args     go to state 81
    array_expr    go to state 31
    array_access  go to state 33
    range_expr    go to state 34


State 51

   70 array_access: ident TLBRACKET . TINTEGER TRBRACKET

    TINTEGER  shift, and go to state 82


State 52

   20 var_decl: ident ident .
   21         | ident ident . TEQUAL expr

    TEQUAL  shift, and go to state 83

    $default  reduce using rule 20 (var_decl)


State 53

   59 comparison: TCEQ .

    $default  reduce using rule 59 (comparison)


State 54

   60 comparison: TCNE .

    $default  reduce using rule 60 (comparison)


State 55

   61 comparison: TCLO .

    $default  reduce using rule 61 (comparison)


State 56

   62 comparison: TCLE .

    $default  reduce using rule 62 (comparison)


State 57

   63 comparison: TCGR .

    $default  reduce using rule 63 (comparison)


State 58

   64 comparison: TCGE .

    $default  reduce using rule 64 (comparison)


State 59

   50 binop_expr: expr TPLUS . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    ident         go to state 36
    literals      go to state 25
    expr          go to state 84
    binop_expr    go to state 28
    unaryop_expr  go to state 29
    boolean_expr  go to state 30
    array_expr    go to state 31
    array_access  go to state 33
    range_expr    go to state 34


State 60

   51 binop_expr: expr TMINUS . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    ident         go to state 36
    literals      go to state 25
    expr          go to state 85
    binop_expr    go to state 28
    unaryop_expr  go to state 29
    boolean_expr  go to state 30
    array_expr    go to state 31
    array_access  go to state 33
    range_expr    go to state 34


State 61

   52 binop_expr: expr TMUL . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    ident         go to state 36
    literals      go to state 25
    expr          go to state 86
    binop_expr    go to state 28
    unaryop_expr  go to state 29
    boolean_expr  go to state 30
    array_expr    go to state 31
    array_access  go to state 33
    range_expr    go to state 34


State 62

   53 binop_expr: expr TDIV . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    ident         go to state 36
    literals      go to state 25
    expr          go to state 87
    binop_expr    go to state 28
    unaryop_expr  go to state 29
    boolean_expr  go to state 30
    array_expr    go to state 31
    array_access  go to state 33
    range_expr    go to state 34


State 63

   48 binop_expr: expr TAND . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    ident         go to state 36
    literals      go to state 25
    expr          go to state 88
    binop_expr    go to state 28
    unaryop_expr  go to state 29
    boolean_expr  go to state 30
    array_expr    go to state 31
    array_access  go to state 33
    range_expr    go to state 34


State 64

   49 binop_expr: expr TOR . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    ident         go to state 36
    literals      go to state 25
    expr          go to state 89
    binop_expr    go to state 28
    unaryop_expr  go to state 29
    boolean_expr  go to state 30
    array_expr    go to state 31
    array_access  go to state 33
    range_expr    go to state 34


State 65

   55 boolean_expr: expr comparison . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    ident         go to state 36
    literals      go to state 25
    expr          go to state 90
    binop_expr    go to state 28
    unaryop_expr  go to state 29
    boolean_expr  go to state 30
    array_expr    go to state 31
    array_access  go to state 33
    range_expr    go to state 34


State 66

   71 array_access: array_access TLBRACKET . TINTEGER TRBRACKET

    TINTEGER  shift, and go to state 91


State 67

   30 ident: TIDENTIFIER TDOT TIDENTIFIER .

    $default  reduce using rule 30 (ident)


State 68

   44 expr: TLPAREN expr TRPAREN .

    $default  reduce using rule 44 (expr)


State 69

   72 range_expr: TLBRACKET expr TRANGE . expr TRBRACKET

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    ident         go to state 36
    literals      go to state 25
    expr          go to state 92
    binop_expr    go to state 28
    unaryop_expr  go to state 29
    boolean_expr  go to state 30
    array_expr    go to state 31
    array_access  go to state 33
    range_expr    go to state 34


State 70

   67 array_elemets_expr: array_elemets_expr TCOMMA . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    ident         go to state 36
    literals      go to state 25
    expr          go to state 93
    binop_expr    go to state 28
    unaryop_expr  go to state 29
    boolean_expr  go to state 30
    array_expr    go to state 31
    array_access  go to state 33
    range_expr    go to state 34


State 71

   68 array_expr: TLBRACKET array_elemets_expr TRBRACKET .

    $default  reduce using rule 68 (array_expr)


State 72

   16 conditional_if: TIF TLPAREN expr . TRPAREN block TELSE block
   17               | TIF TLPAREN expr . TRPAREN block
   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   55 boolean_expr: expr . comparison expr

    TCEQ     shift, and go to state 53
    TCNE     shift, and go to state 54
    TCLO     shift, and go to state 55
    TCLE     shift, and go to state 56
    TCGR     shift, and go to state 57
    TCGE     shift, and go to state 58
    TRPAREN  shift, and go to state 94
    TPLUS    shift, and go to state 59
    TMINUS   shift, and go to state 60
    TMUL     shift, and go to state 61
    TDIV     shift, and go to state 62
    TAND     shift, and go to state 63
    TOR      shift, and go to state 64

    comparison  go to state 65


State 73

   18 while: TWHILE TLPAREN expr . TRPAREN block TELSE block
   19      | TWHILE TLPAREN expr . TRPAREN block
   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   55 boolean_expr: expr . comparison expr

    TCEQ     shift, and go to state 53
    TCNE     shift, and go to state 54
    TCLO     shift, and go to state 55
    TCLE     shift, and go to state 56
    TCGR     shift, and go to state 57
    TCGE     shift, and go to state 58
    TRPAREN  shift, and go to state 95
    TPLUS    shift, and go to state 59
    TMINUS   shift, and go to state 60
    TMUL     shift, and go to state 61
    TDIV     shift, and go to state 62
    TAND     shift, and go to state 63
    TOR      shift, and go to state 64

    comparison  go to state 65


State 74

   23 func_decl: TDEF ident TLPAREN . func_decl_args TRPAREN TRETURN ident block
   24          | TDEF ident TLPAREN . func_decl_args TRPAREN block

    TIDENTIFIER  shift, and go to state 1

    $default  reduce using rule 25 (func_decl_args)

    var_decl        go to state 96
    func_decl_args  go to state 97
    ident           go to state 98


State 75

   14 block: TBLOCKSTART . stmts TBLOCKEND
   15      | TBLOCKSTART . TBLOCKEND

    TIDENTIFIER     shift, and go to state 1
    TINTEGER        shift, and go to state 2
    TDOUBLE         shift, and go to state 3
    TSTR            shift, and go to state 4
    TBOOL           shift, and go to state 5
    TLPAREN         shift, and go to state 6
    TLBRACKET       shift, and go to state 7
    TNOT            shift, and go to state 8
    TIF             shift, and go to state 9
    TWHILE          shift, and go to state 10
    TDEF            shift, and go to state 11
    TRETURN         shift, and go to state 12
    TRETURN_SIMPLE  shift, and go to state 13
    TVAR            shift, and go to state 14
    TBLOCKEND       shift, and go to state 99

    stmts              go to state 100
    stmt               go to state 17
    conditional_if     go to state 18
    while              go to state 19
    var_decl           go to state 20
    var_decl_deduce    go to state 21
    func_decl          go to state 22
    class_decl         go to state 23
    ident              go to state 24
    literals           go to state 25
    return             go to state 26
    expr               go to state 27
    binop_expr         go to state 28
    unaryop_expr       go to state 29
    boolean_expr       go to state 30
    array_expr         go to state 31
    array_add_element  go to state 32
    array_access       go to state 33
    range_expr         go to state 34


State 76

   28 class_decl: TDEF ident block .

    $default  reduce using rule 28 (class_decl)


State 77

   22 var_decl_deduce: TVAR ident TEQUAL . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    ident         go to state 36
    literals      go to state 25
    expr          go to state 101
    binop_expr    go to state 28
    unaryop_expr  go to state 29
    boolean_expr  go to state 30
    array_expr    go to state 31
    array_access  go to state 33
    range_expr    go to state 34


State 78

   37 expr: ident TEQUAL expr .
   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   55 boolean_expr: expr . comparison expr

    TCEQ    shift, and go to state 53
    TCNE    shift, and go to state 54
    TCLO    shift, and go to state 55
    TCLE    shift, and go to state 56
    TCGR    shift, and go to state 57
    TCGE    shift, and go to state 58
    TPLUS   shift, and go to state 59
    TMINUS  shift, and go to state 60
    TMUL    shift, and go to state 61
    TDIV    shift, and go to state 62
    TAND    shift, and go to state 63
    TOR     shift, and go to state 64

    TCEQ      [reduce using rule 37 (expr)]
    TCNE      [reduce using rule 37 (expr)]
    TCLO      [reduce using rule 37 (expr)]
    TCLE      [reduce using rule 37 (expr)]
    TCGR      [reduce using rule 37 (expr)]
    TCGE      [reduce using rule 37 (expr)]
    TPLUS     [reduce using rule 37 (expr)]
    TMINUS    [reduce using rule 37 (expr)]
    TMUL      [reduce using rule 37 (expr)]
    TDIV      [reduce using rule 37 (expr)]
    TAND      [reduce using rule 37 (expr)]
    TOR       [reduce using rule 37 (expr)]
    $default  reduce using rule 37 (expr)

    comparison  go to state 65


State 79

   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   55 boolean_expr: expr . comparison expr
   69 array_add_element: ident TLTLT expr .

    TCEQ    shift, and go to state 53
    TCNE    shift, and go to state 54
    TCLO    shift, and go to state 55
    TCLE    shift, and go to state 56
    TCGR    shift, and go to state 57
    TCGE    shift, and go to state 58
    TPLUS   shift, and go to state 59
    TMINUS  shift, and go to state 60
    TMUL    shift, and go to state 61
    TDIV    shift, and go to state 62
    TAND    shift, and go to state 63
    TOR     shift, and go to state 64

    $default  reduce using rule 69 (array_add_element)

    comparison  go to state 65


State 80

   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   55 boolean_expr: expr . comparison expr
   57 call_args: expr .

    TCEQ    shift, and go to state 53
    TCNE    shift, and go to state 54
    TCLO    shift, and go to state 55
    TCLE    shift, and go to state 56
    TCGR    shift, and go to state 57
    TCGE    shift, and go to state 58
    TPLUS   shift, and go to state 59
    TMINUS  shift, and go to state 60
    TMUL    shift, and go to state 61
    TDIV    shift, and go to state 62
    TAND    shift, and go to state 63
    TOR     shift, and go to state 64

    $default  reduce using rule 57 (call_args)

    comparison  go to state 65


State 81

   38 expr: ident TLPAREN call_args . TRPAREN
   58 call_args: call_args . TCOMMA expr

    TCOMMA   shift, and go to state 102
    TRPAREN  shift, and go to state 103


State 82

   70 array_access: ident TLBRACKET TINTEGER . TRBRACKET

    TRBRACKET  shift, and go to state 104


State 83

   21 var_decl: ident ident TEQUAL . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    ident         go to state 36
    literals      go to state 25
    expr          go to state 105
    binop_expr    go to state 28
    unaryop_expr  go to state 29
    boolean_expr  go to state 30
    array_expr    go to state 31
    array_access  go to state 33
    range_expr    go to state 34


State 84

   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   50           | expr TPLUS expr .
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   55 boolean_expr: expr . comparison expr

    TCEQ  shift, and go to state 53
    TCNE  shift, and go to state 54
    TCLO  shift, and go to state 55
    TCLE  shift, and go to state 56
    TCGR  shift, and go to state 57
    TCGE  shift, and go to state 58
    TMUL  shift, and go to state 61
    TDIV  shift, and go to state 62
    TAND  shift, and go to state 63
    TOR   shift, and go to state 64

    TCEQ      [reduce using rule 50 (binop_expr)]
    TCNE      [reduce using rule 50 (binop_expr)]
    TCLO      [reduce using rule 50 (binop_expr)]
    TCLE      [reduce using rule 50 (binop_expr)]
    TCGR      [reduce using rule 50 (binop_expr)]
    TCGE      [reduce using rule 50 (binop_expr)]
    TOR       [reduce using rule 50 (binop_expr)]
    $default  reduce using rule 50 (binop_expr)

    comparison  go to state 65


State 85

   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   51           | expr TMINUS expr .
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   55 boolean_expr: expr . comparison expr

    TCEQ  shift, and go to state 53
    TCNE  shift, and go to state 54
    TCLO  shift, and go to state 55
    TCLE  shift, and go to state 56
    TCGR  shift, and go to state 57
    TCGE  shift, and go to state 58
    TMUL  shift, and go to state 61
    TDIV  shift, and go to state 62
    TAND  shift, and go to state 63
    TOR   shift, and go to state 64

    TCEQ      [reduce using rule 51 (binop_expr)]
    TCNE      [reduce using rule 51 (binop_expr)]
    TCLO      [reduce using rule 51 (binop_expr)]
    TCLE      [reduce using rule 51 (binop_expr)]
    TCGR      [reduce using rule 51 (binop_expr)]
    TCGE      [reduce using rule 51 (binop_expr)]
    TOR       [reduce using rule 51 (binop_expr)]
    $default  reduce using rule 51 (binop_expr)

    comparison  go to state 65


State 86

   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   52           | expr TMUL expr .
   53           | expr . TDIV expr
   55 boolean_expr: expr . comparison expr

    TCEQ  shift, and go to state 53
    TCNE  shift, and go to state 54
    TCLO  shift, and go to state 55
    TCLE  shift, and go to state 56
    TCGR  shift, and go to state 57
    TCGE  shift, and go to state 58
    TAND  shift, and go to state 63
    TOR   shift, and go to state 64

    TCEQ      [reduce using rule 52 (binop_expr)]
    TCNE      [reduce using rule 52 (binop_expr)]
    TCLO      [reduce using rule 52 (binop_expr)]
    TCLE      [reduce using rule 52 (binop_expr)]
    TCGR      [reduce using rule 52 (binop_expr)]
    TCGE      [reduce using rule 52 (binop_expr)]
    TOR       [reduce using rule 52 (binop_expr)]
    $default  reduce using rule 52 (binop_expr)

    comparison  go to state 65


State 87

   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   53           | expr TDIV expr .
   55 boolean_expr: expr . comparison expr

    TCEQ  shift, and go to state 53
    TCNE  shift, and go to state 54
    TCLO  shift, and go to state 55
    TCLE  shift, and go to state 56
    TCGR  shift, and go to state 57
    TCGE  shift, and go to state 58
    TAND  shift, and go to state 63
    TOR   shift, and go to state 64

    TCEQ      [reduce using rule 53 (binop_expr)]
    TCNE      [reduce using rule 53 (binop_expr)]
    TCLO      [reduce using rule 53 (binop_expr)]
    TCLE      [reduce using rule 53 (binop_expr)]
    TCGR      [reduce using rule 53 (binop_expr)]
    TCGE      [reduce using rule 53 (binop_expr)]
    TOR       [reduce using rule 53 (binop_expr)]
    $default  reduce using rule 53 (binop_expr)

    comparison  go to state 65


State 88

   48 binop_expr: expr . TAND expr
   48           | expr TAND expr .
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   55 boolean_expr: expr . comparison expr

    TCEQ  shift, and go to state 53
    TCNE  shift, and go to state 54
    TCLO  shift, and go to state 55
    TCLE  shift, and go to state 56
    TCGR  shift, and go to state 57
    TCGE  shift, and go to state 58
    TOR   shift, and go to state 64

    TCEQ      [reduce using rule 48 (binop_expr)]
    TCNE      [reduce using rule 48 (binop_expr)]
    TCLO      [reduce using rule 48 (binop_expr)]
    TCLE      [reduce using rule 48 (binop_expr)]
    TCGR      [reduce using rule 48 (binop_expr)]
    TCGE      [reduce using rule 48 (binop_expr)]
    TOR       [reduce using rule 48 (binop_expr)]
    $default  reduce using rule 48 (binop_expr)

    comparison  go to state 65


State 89

   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   49           | expr TOR expr .
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   55 boolean_expr: expr . comparison expr

    TCEQ    shift, and go to state 53
    TCNE    shift, and go to state 54
    TCLO    shift, and go to state 55
    TCLE    shift, and go to state 56
    TCGR    shift, and go to state 57
    TCGE    shift, and go to state 58
    TPLUS   shift, and go to state 59
    TMINUS  shift, and go to state 60
    TMUL    shift, and go to state 61
    TDIV    shift, and go to state 62
    TAND    shift, and go to state 63
    TOR     shift, and go to state 64

    TCEQ      [reduce using rule 49 (binop_expr)]
    TCNE      [reduce using rule 49 (binop_expr)]
    TCLO      [reduce using rule 49 (binop_expr)]
    TCLE      [reduce using rule 49 (binop_expr)]
    TCGR      [reduce using rule 49 (binop_expr)]
    TCGE      [reduce using rule 49 (binop_expr)]
    TPLUS     [reduce using rule 49 (binop_expr)]
    TMINUS    [reduce using rule 49 (binop_expr)]
    TMUL      [reduce using rule 49 (binop_expr)]
    TDIV      [reduce using rule 49 (binop_expr)]
    TAND      [reduce using rule 49 (binop_expr)]
    TOR       [reduce using rule 49 (binop_expr)]
    $default  reduce using rule 49 (binop_expr)

    comparison  go to state 65


State 90

   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   55 boolean_expr: expr . comparison expr
   55             | expr comparison expr .

    TCEQ    shift, and go to state 53
    TCNE    shift, and go to state 54
    TCLO    shift, and go to state 55
    TCLE    shift, and go to state 56
    TCGR    shift, and go to state 57
    TCGE    shift, and go to state 58
    TPLUS   shift, and go to state 59
    TMINUS  shift, and go to state 60
    TMUL    shift, and go to state 61
    TDIV    shift, and go to state 62
    TAND    shift, and go to state 63
    TOR     shift, and go to state 64

    TCEQ      [reduce using rule 55 (boolean_expr)]
    TCNE      [reduce using rule 55 (boolean_expr)]
    TCLO      [reduce using rule 55 (boolean_expr)]
    TCLE      [reduce using rule 55 (boolean_expr)]
    TCGR      [reduce using rule 55 (boolean_expr)]
    TCGE      [reduce using rule 55 (boolean_expr)]
    TPLUS     [reduce using rule 55 (boolean_expr)]
    TMINUS    [reduce using rule 55 (boolean_expr)]
    TMUL      [reduce using rule 55 (boolean_expr)]
    TDIV      [reduce using rule 55 (boolean_expr)]
    TAND      [reduce using rule 55 (boolean_expr)]
    TOR       [reduce using rule 55 (boolean_expr)]
    $default  reduce using rule 55 (boolean_expr)

    comparison  go to state 65


State 91

   71 array_access: array_access TLBRACKET TINTEGER . TRBRACKET

    TRBRACKET  shift, and go to state 106


State 92

   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   55 boolean_expr: expr . comparison expr
   72 range_expr: TLBRACKET expr TRANGE expr . TRBRACKET

    TCEQ       shift, and go to state 53
    TCNE       shift, and go to state 54
    TCLO       shift, and go to state 55
    TCLE       shift, and go to state 56
    TCGR       shift, and go to state 57
    TCGE       shift, and go to state 58
    TRBRACKET  shift, and go to state 107
    TPLUS      shift, and go to state 59
    TMINUS     shift, and go to state 60
    TMUL       shift, and go to state 61
    TDIV       shift, and go to state 62
    TAND       shift, and go to state 63
    TOR        shift, and go to state 64

    comparison  go to state 65


State 93

   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   55 boolean_expr: expr . comparison expr
   67 array_elemets_expr: array_elemets_expr TCOMMA expr .

    TCEQ    shift, and go to state 53
    TCNE    shift, and go to state 54
    TCLO    shift, and go to state 55
    TCLE    shift, and go to state 56
    TCGR    shift, and go to state 57
    TCGE    shift, and go to state 58
    TPLUS   shift, and go to state 59
    TMINUS  shift, and go to state 60
    TMUL    shift, and go to state 61
    TDIV    shift, and go to state 62
    TAND    shift, and go to state 63
    TOR     shift, and go to state 64

    $default  reduce using rule 67 (array_elemets_expr)

    comparison  go to state 65


State 94

   16 conditional_if: TIF TLPAREN expr TRPAREN . block TELSE block
   17               | TIF TLPAREN expr TRPAREN . block

    TBLOCKSTART  shift, and go to state 75

    block  go to state 108


State 95

   18 while: TWHILE TLPAREN expr TRPAREN . block TELSE block
   19      | TWHILE TLPAREN expr TRPAREN . block

    TBLOCKSTART  shift, and go to state 75

    block  go to state 109


State 96

   26 func_decl_args: var_decl .

    $default  reduce using rule 26 (func_decl_args)


State 97

   23 func_decl: TDEF ident TLPAREN func_decl_args . TRPAREN TRETURN ident block
   24          | TDEF ident TLPAREN func_decl_args . TRPAREN block
   27 func_decl_args: func_decl_args . TCOMMA var_decl

    TCOMMA   shift, and go to state 110
    TRPAREN  shift, and go to state 111


State 98

   20 var_decl: ident . ident
   21         | ident . ident TEQUAL expr

    TIDENTIFIER  shift, and go to state 1

    ident  go to state 52


State 99

   15 block: TBLOCKSTART TBLOCKEND .

    $default  reduce using rule 15 (block)


State 100

    4 stmts: stmts . stmt
   14 block: TBLOCKSTART stmts . TBLOCKEND

    TIDENTIFIER     shift, and go to state 1
    TINTEGER        shift, and go to state 2
    TDOUBLE         shift, and go to state 3
    TSTR            shift, and go to state 4
    TBOOL           shift, and go to state 5
    TLPAREN         shift, and go to state 6
    TLBRACKET       shift, and go to state 7
    TNOT            shift, and go to state 8
    TIF             shift, and go to state 9
    TWHILE          shift, and go to state 10
    TDEF            shift, and go to state 11
    TRETURN         shift, and go to state 12
    TRETURN_SIMPLE  shift, and go to state 13
    TVAR            shift, and go to state 14
    TBLOCKEND       shift, and go to state 112

    stmt               go to state 47
    conditional_if     go to state 18
    while              go to state 19
    var_decl           go to state 20
    var_decl_deduce    go to state 21
    func_decl          go to state 22
    class_decl         go to state 23
    ident              go to state 24
    literals           go to state 25
    return             go to state 26
    expr               go to state 27
    binop_expr         go to state 28
    unaryop_expr       go to state 29
    boolean_expr       go to state 30
    array_expr         go to state 31
    array_add_element  go to state 32
    array_access       go to state 33
    range_expr         go to state 34


State 101

   22 var_decl_deduce: TVAR ident TEQUAL expr .
   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   55 boolean_expr: expr . comparison expr

    TCEQ    shift, and go to state 53
    TCNE    shift, and go to state 54
    TCLO    shift, and go to state 55
    TCLE    shift, and go to state 56
    TCGR    shift, and go to state 57
    TCGE    shift, and go to state 58
    TPLUS   shift, and go to state 59
    TMINUS  shift, and go to state 60
    TMUL    shift, and go to state 61
    TDIV    shift, and go to state 62
    TAND    shift, and go to state 63
    TOR     shift, and go to state 64

    $default  reduce using rule 22 (var_decl_deduce)

    comparison  go to state 65


State 102

   58 call_args: call_args TCOMMA . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 2
    TDOUBLE      shift, and go to state 3
    TSTR         shift, and go to state 4
    TBOOL        shift, and go to state 5
    TLPAREN      shift, and go to state 6
    TLBRACKET    shift, and go to state 7
    TNOT         shift, and go to state 8

    ident         go to state 36
    literals      go to state 25
    expr          go to state 113
    binop_expr    go to state 28
    unaryop_expr  go to state 29
    boolean_expr  go to state 30
    array_expr    go to state 31
    array_access  go to state 33
    range_expr    go to state 34


State 103

   38 expr: ident TLPAREN call_args TRPAREN .

    $default  reduce using rule 38 (expr)


State 104

   70 array_access: ident TLBRACKET TINTEGER TRBRACKET .

    $default  reduce using rule 70 (array_access)


State 105

   21 var_decl: ident ident TEQUAL expr .
   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   55 boolean_expr: expr . comparison expr

    TCEQ    shift, and go to state 53
    TCNE    shift, and go to state 54
    TCLO    shift, and go to state 55
    TCLE    shift, and go to state 56
    TCGR    shift, and go to state 57
    TCGE    shift, and go to state 58
    TPLUS   shift, and go to state 59
    TMINUS  shift, and go to state 60
    TMUL    shift, and go to state 61
    TDIV    shift, and go to state 62
    TAND    shift, and go to state 63
    TOR     shift, and go to state 64

    $default  reduce using rule 21 (var_decl)

    comparison  go to state 65


State 106

   71 array_access: array_access TLBRACKET TINTEGER TRBRACKET .

    $default  reduce using rule 71 (array_access)


State 107

   72 range_expr: TLBRACKET expr TRANGE expr TRBRACKET .

    $default  reduce using rule 72 (range_expr)


State 108

   16 conditional_if: TIF TLPAREN expr TRPAREN block . TELSE block
   17               | TIF TLPAREN expr TRPAREN block .

    TELSE  shift, and go to state 114

    $default  reduce using rule 17 (conditional_if)


State 109

   18 while: TWHILE TLPAREN expr TRPAREN block . TELSE block
   19      | TWHILE TLPAREN expr TRPAREN block .

    TELSE  shift, and go to state 115

    $default  reduce using rule 19 (while)


State 110

   27 func_decl_args: func_decl_args TCOMMA . var_decl

    TIDENTIFIER  shift, and go to state 1

    var_decl  go to state 116
    ident     go to state 98


State 111

   23 func_decl: TDEF ident TLPAREN func_decl_args TRPAREN . TRETURN ident block
   24          | TDEF ident TLPAREN func_decl_args TRPAREN . block

    TRETURN      shift, and go to state 117
    TBLOCKSTART  shift, and go to state 75

    block  go to state 118


State 112

   14 block: TBLOCKSTART stmts TBLOCKEND .

    $default  reduce using rule 14 (block)


State 113

   48 binop_expr: expr . TAND expr
   49           | expr . TOR expr
   50           | expr . TPLUS expr
   51           | expr . TMINUS expr
   52           | expr . TMUL expr
   53           | expr . TDIV expr
   55 boolean_expr: expr . comparison expr
   58 call_args: call_args TCOMMA expr .

    TCEQ    shift, and go to state 53
    TCNE    shift, and go to state 54
    TCLO    shift, and go to state 55
    TCLE    shift, and go to state 56
    TCGR    shift, and go to state 57
    TCGE    shift, and go to state 58
    TPLUS   shift, and go to state 59
    TMINUS  shift, and go to state 60
    TMUL    shift, and go to state 61
    TDIV    shift, and go to state 62
    TAND    shift, and go to state 63
    TOR     shift, and go to state 64

    $default  reduce using rule 58 (call_args)

    comparison  go to state 65


State 114

   16 conditional_if: TIF TLPAREN expr TRPAREN block TELSE . block

    TBLOCKSTART  shift, and go to state 75

    block  go to state 119


State 115

   18 while: TWHILE TLPAREN expr TRPAREN block TELSE . block

    TBLOCKSTART  shift, and go to state 75

    block  go to state 120


State 116

   27 func_decl_args: func_decl_args TCOMMA var_decl .

    $default  reduce using rule 27 (func_decl_args)


State 117

   23 func_decl: TDEF ident TLPAREN func_decl_args TRPAREN TRETURN . ident block

    TIDENTIFIER  shift, and go to state 1

    ident  go to state 121


State 118

   24 func_decl: TDEF ident TLPAREN func_decl_args TRPAREN block .

    $default  reduce using rule 24 (func_decl)


State 119

   16 conditional_if: TIF TLPAREN expr TRPAREN block TELSE block .

    $default  reduce using rule 16 (conditional_if)


State 120

   18 while: TWHILE TLPAREN expr TRPAREN block TELSE block .

    $default  reduce using rule 18 (while)


State 121

   23 func_decl: TDEF ident TLPAREN func_decl_args TRPAREN TRETURN ident . block

    TBLOCKSTART  shift, and go to state 75

    block  go to state 122


State 122

   23 func_decl: TDEF ident TLPAREN func_decl_args TRPAREN TRETURN ident block .

    $default  reduce using rule 23 (func_decl)
